@using FriChat.Core.Models.AppUser
@model AppUserIndexPageViewModel
@{
    ViewData["Title"] = "Home page";
}
<link rel="stylesheet" href="~/css/index.css" />

@await Html.PartialAsync("_SearchUserPartial", Model.UserSearchFormViewModel)

<form method="get" action="/AppUser/SearchUserPartial">
    <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Search users..." />
    <button type="submit">Search</button>
</form>

<div id="searchResults"></div>

<div class="chat-layout">
    <div class="friends-list">
        <h3>Friends</h3>
        <ul>
            @foreach (var friend in Model.FriendsList)
            {
                <li>
                    <div style="display: flex; align-items: center; gap: 0.75rem;">
                        <img src="@friend.FriendProfilePicturePath" alt="Profile" style="width:40px; height:40px; border-radius:50%; object-fit:cover;" />
                        <div>
                            <div style="font-weight: bold;">@friend.FriendUsername</div>
                            <div style="font-size: 0.9em; color: #bbb;">@friend.LastMessage</div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
    <div class="chat-window">
        <div class="chat-messages">
            <!-- Chat messages will go here -->
            <div><strong>User 1:</strong> Hello!</div>
            <div><strong>You:</strong> Hi there!</div>
        </div>
        <form class="chat-input">
            <input type="text" placeholder="Type your message..." />
            <button type="submit">Send</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form[action="/AppUser/SearchUserPartial"]');
            const searchInput = form.querySelector('input[name="searchTerm"]');
            const resultsContainer = document.getElementById('searchResults');

            form.addEventListener('submit', function (e) {
                e.preventDefault();
                const searchTerm = searchInput.value;

                fetch(`/AppUser/SearchUserPartial?searchTerm=${encodeURIComponent(searchTerm)}`, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.text())
                .then(html => {
                    resultsContainer.innerHTML = html;
                })
                .catch(error => {
                    resultsContainer.innerHTML = '<div style="color:red;">Error loading results.</div>';
                });
            });
        });
    </script>
}